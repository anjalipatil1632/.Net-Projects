//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeTravelBookingSystem_MVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Sprint2dbEntities1 : DbContext
    {
        public Sprint2dbEntities1()
            : base("name=Sprint2dbEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TravelRequest> TravelRequests { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
    
        public virtual int AddTravelRequest(string fromlocation, string tolocation, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string medium, Nullable<int> userid)
        {
            var fromlocationParameter = fromlocation != null ?
                new ObjectParameter("fromlocation", fromlocation) :
                new ObjectParameter("fromlocation", typeof(string));
    
            var tolocationParameter = tolocation != null ?
                new ObjectParameter("tolocation", tolocation) :
                new ObjectParameter("tolocation", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var mediumParameter = medium != null ?
                new ObjectParameter("medium", medium) :
                new ObjectParameter("medium", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTravelRequest", fromlocationParameter, tolocationParameter, fromdateParameter, todateParameter, mediumParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spAdminCheckLoginDetails(string loginid, string password)
        {
            var loginidParameter = loginid != null ?
                new ObjectParameter("loginid", loginid) :
                new ObjectParameter("loginid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spAdminCheckLoginDetails", loginidParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spApprovedRequest_Result> spApprovedRequest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spApprovedRequest_Result>("spApprovedRequest");
        }
    
        public virtual int spCancelTicket(Nullable<int> requestid)
        {
            var requestidParameter = requestid.HasValue ?
                new ObjectParameter("requestid", requestid) :
                new ObjectParameter("requestid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCancelTicket", requestidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spEmpCheckLoginDetails(string loginid, string password)
        {
            var loginidParameter = loginid != null ?
                new ObjectParameter("loginid", loginid) :
                new ObjectParameter("loginid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spEmpCheckLoginDetails", loginidParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spGetNewRequest_Result> spGetNewRequest(string managerid)
        {
            var manageridParameter = managerid != null ?
                new ObjectParameter("managerid", managerid) :
                new ObjectParameter("managerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNewRequest_Result>("spGetNewRequest", manageridParameter);
        }
    
        public virtual ObjectResult<spGetNewRequests_Result> spGetNewRequests(string managerid)
        {
            var manageridParameter = managerid != null ?
                new ObjectParameter("managerid", managerid) :
                new ObjectParameter("managerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetNewRequests_Result>("spGetNewRequests", manageridParameter);
        }
    
        public virtual ObjectResult<spGetRecordsById_Result> spGetRecordsById(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetRecordsById_Result>("spGetRecordsById", requestIdParameter);
        }
    
        public virtual ObjectResult<spGetTravelRequestDetails_Result> spGetTravelRequestDetails(string loginid)
        {
            var loginidParameter = loginid != null ?
                new ObjectParameter("loginid", loginid) :
                new ObjectParameter("loginid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTravelRequestDetails_Result>("spGetTravelRequestDetails", loginidParameter);
        }
    
        public virtual ObjectResult<spHistoryRecords_Result> spHistoryRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHistoryRecords_Result>("spHistoryRecords");
        }
    
        public virtual ObjectResult<Nullable<int>> spManagerCheckLoginDetails(string loginid, string password)
        {
            var loginidParameter = loginid != null ?
                new ObjectParameter("loginid", loginid) :
                new ObjectParameter("loginid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spManagerCheckLoginDetails", loginidParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spRejectedRequest_Result> spRejectedRequest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRejectedRequest_Result>("spRejectedRequest");
        }
    
        public virtual ObjectResult<Nullable<int>> spTravelAgentCheckLoginDetails(string loginid, string password)
        {
            var loginidParameter = loginid != null ?
                new ObjectParameter("loginid", loginid) :
                new ObjectParameter("loginid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spTravelAgentCheckLoginDetails", loginidParameter, passwordParameter);
        }
    
        public virtual int spUpdateApproveRequest(Nullable<int> requestId, string managerStatus)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            var managerStatusParameter = managerStatus != null ?
                new ObjectParameter("ManagerStatus", managerStatus) :
                new ObjectParameter("ManagerStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateApproveRequest", requestIdParameter, managerStatusParameter);
        }
    
        public virtual int spUpdateRejectRequest(Nullable<int> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRejectRequest", requestIdParameter);
        }
    }
}
